<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">
<properties>

	<!-- 페이징처리 사용하려면 수정필요함 -->
	<entry key="selectList">
		SELECT *
		  FROM (
		  		SELCT ROWNUM "RNUM", A.*
		  		 FROM (
		  		 		SELECT 
		  		 			   CONSULT_NO
		  		 	  		 , CONSULT_TITLE
		  		 	  		 , TO_CHAR(ENROLL_DATE, 'YYYY/MM/DD') "ENROLL_DATE"
		  		 	  		 , CONSULT_CATEGORY
		  		 	  		 , ANSWER_STATUS
		  		 	      FROM CONSULT C
		  		 	      JOIN MEMBER M ON (M.USER_NO = C.USER_NO)
		  		 	     WHERE C.USER_NO = ?
		  		 	     	 , C.STATUS = 'Y'
		  		 	     ORDER 
		  		 	        BY COUNSULT_NO DESC
		  		 	   ) A
		  		)
		 WHERE RNUM BETWEEN ? AND ?
		  		
	</entry>
	
	<entry key="selectListCount">
		SELECT COUNT(*) "COUNT"
		  FROM CONSULT
		 WHERE STATUS = 'Y'
	</entry>
	
	<entry key="reviewProduct">
		SELECT
			   PRO_NO
		     , CATEGORY 
		     , PRO_NAME
		     , PRICE
		     , THUMB_IMG
		  FROM PRODUCT
		 WHERE PRO_NO = ?
	</entry>
	
	<entry key="insertReview">
		INSERT
		  INTO REVIEW
		  (
		  	REVIEW_NO
		  , PRO_NO
		  , USER_NO
		  , REVIEW_TITLE
		  , REVIEW_CONTENT
		  , MODIFY_DATE
		  , ENROLL_DATE
		  , REVIEW_PHOTO
		  , FILE_PATH
		  , STATUS
		  )
		  VALUES
		  (
		  	SEQ_REVIEWNO.NEXTVAL
		  , ?
		  , ?
		  , ?
		  , ?
		  , SYSDATE
		  , SYSDATE
		  , ?
		  , ?
		  , 'Y'
		  )  
	</entry>
	
	<entry key="updateReview">
		UPDATE
		       REVIEW
		   SET REVIEW_TITLE = ?
		     , REVIEW_CONTENT = ?
		     , MODIFY_DATE = SYSDATE
		     , REVIEW_PHOTO = ?
		     , FILE_PATH = ?
		 WHERE REVIEW_NO = ?
		   AND STATUS = 'Y'  
	</entry>
	
	<entry key="deleteReview">
		UPDATE 
			   REVIEW
		   SET STATUS = 'N'
		 WHERE REVIEW_NO = ?
	</entry>
	
	<entry key="selectAllReview">
		SELECT REVIEW_NO
			 , P.PRO_NAME
			 , M.USER_ID
		     , REVIEW_TITLE
		     , REVIEW_CONTENT
		     , R.MODIFY_DATE
		     , R.ENROLL_DATE
		     , REVIEW_PHOTO
		     , R.FILE_PATH
		  FROM REVIEW R
	 LEFT JOIN PRODUCT P ON (R.PRO_NO = P.PRO_NO) 
	 LEFT JOIN MEMBER M ON (M.USER_NO = R.USER_NO)
		 WHERE P.PRO_NO = ? 
		   AND R.STATUS = 'Y' 
	</entry>
	
	<entry key="reviewStar">
		SELECT PRO_NO, ROUND(AVG(STAR),1)
  		  FROM REVIEW
 	 	 WHERE PRO_NO = ?
 		 GROUP 
   		    BY PRO_NO;
	</entry>

</properties>

	
	
	
	